/*
 * This file was generated by qdbusxml2cpp-fix version 0.8
 * Command line was: qdbusxml2cpp-fix -c Accounts -p com_deepin_daemon_accounts ../xml/com.deepin.daemon.Accounts.xml
 *
 * qdbusxml2cpp-fix is Copyright (C) 2016 Deepin Technology Co., Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "com_deepin_daemon_accounts.h"

/*
 * Implementation of interface class Accounts
 */

Accounts::Accounts(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent)
    : DBusExtendedAbstractInterface(service, path, staticInterfaceName(), connection, parent)
{
    connect(this, &Accounts::propertyChanged, this, &Accounts::onPropertyChanged);
}

Accounts::~Accounts()
{
}

void Accounts::onPropertyChanged(const QString &propName, const QVariant &value)
{
    if (propName == QStringLiteral("AllowGuest"))
    {
        const bool AllowGuest = qvariant_cast<bool>(value);
        if (m_AllowGuest != AllowGuest)
        {
            m_AllowGuest = AllowGuest;
            emit AllowGuestChanged(m_AllowGuest);
        }
        return;
    }

    if (propName == QStringLiteral("GuestIcon"))
    {
        const QString GuestIcon = qvariant_cast<QString>(value);
        if (m_GuestIcon != GuestIcon)
        {
            m_GuestIcon = GuestIcon;
            emit GuestIconChanged(m_GuestIcon);
        }
        return;
    }

    if (propName == QStringLiteral("UserList"))
    {
        const QStringList UserList = qvariant_cast<QStringList>(value);
        if (m_UserList != UserList)
        {
            m_UserList = UserList;
            emit UserListChanged(m_UserList);
        }
        return;
    }

    qWarning() << "property not handle: " << propName;
    return;
}
